'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var http = require('node:http');
var nodeHTTPRequestHandler = require('../nodeHTTPRequestHandler-04fd8382.js');
require('../resolveHTTPResponse-fba32447.js');
require('../config-683bc71d.js');
require('../TRPCError-9233bdba.js');
require('../codes-e0ea0f4c.js');
require('../index-4d2d31b6.js');
require('../transformTRPCResponse-d2700b72.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var http__default = /*#__PURE__*/_interopDefaultLegacy(http);

function createHTTPHandler(opts) {
    return async (req, res)=>{
        // if no hostname, set a dummy one
        const href = req.url.startsWith('/') ? `http://127.0.0.1${req.url}` : req.url;
        // get procedure path and remove the leading slash
        // /procedure -> procedure
        const path = new URL(href).pathname.slice(1);
        await nodeHTTPRequestHandler.nodeHTTPRequestHandler({
            ...opts,
            req,
            res,
            path
        });
    };
}
function createHTTPServer(opts) {
    const handler = createHTTPHandler(opts);
    const server = http__default["default"].createServer((req, res)=>handler(req, res));
    return {
        server,
        listen (port) {
            server.listen(port);
            const actualPort = port === 0 ? server.address().port : port;
            return {
                port: actualPort
            };
        }
    };
}

exports.createHTTPHandler = createHTTPHandler;
exports.createHTTPServer = createHTTPServer;
