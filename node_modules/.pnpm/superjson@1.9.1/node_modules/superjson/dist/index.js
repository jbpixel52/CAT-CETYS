"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.registerCustom = exports.registerSymbol = exports.registerClass = exports.parse = exports.stringify = exports.deserialize = exports.serialize = void 0;
var class_registry_1 = require("./class-registry");
var symbol_registry_1 = require("./symbol-registry");
var custom_transformer_registry_1 = require("./custom-transformer-registry");
var error_props_1 = require("./error-props");
var plainer_1 = require("./plainer");
var copy_anything_1 = require("copy-anything");
var serialize = function (object) {
    var identities = new Map();
    var output = plainer_1.walker(object, identities);
    var res = {
        json: output.transformedValue
    };
    if (output.annotations) {
        res.meta = __assign(__assign({}, res.meta), { values: output.annotations });
    }
    var equalityAnnotations = plainer_1.generateReferentialEqualityAnnotations(identities);
    if (equalityAnnotations) {
        res.meta = __assign(__assign({}, res.meta), { referentialEqualities: equalityAnnotations });
    }
    return res;
};
exports.serialize = serialize;
var deserialize = function (payload) {
    var json = payload.json, meta = payload.meta;
    var result = copy_anything_1.copy(json);
    if (meta === null || meta === void 0 ? void 0 : meta.values) {
        result = plainer_1.applyValueAnnotations(result, meta.values);
    }
    if (meta === null || meta === void 0 ? void 0 : meta.referentialEqualities) {
        result = plainer_1.applyReferentialEqualityAnnotations(result, meta.referentialEqualities);
    }
    return result;
};
exports.deserialize = deserialize;
var stringify = function (object) {
    return JSON.stringify(exports.serialize(object));
};
exports.stringify = stringify;
var parse = function (string) {
    return exports.deserialize(JSON.parse(string));
};
exports.parse = parse;
var registerClass = function (v, options) {
    return class_registry_1.ClassRegistry.register(v, options);
};
exports.registerClass = registerClass;
var registerSymbol = function (v, identifier) {
    return symbol_registry_1.SymbolRegistry.register(v, identifier);
};
exports.registerSymbol = registerSymbol;
var registerCustom = function (transformer, name) {
    return custom_transformer_registry_1.CustomTransformerRegistry.register(__assign({ name: name }, transformer));
};
exports.registerCustom = registerCustom;
exports["default"] = {
    stringify: exports.stringify,
    parse: exports.parse,
    serialize: exports.serialize,
    deserialize: exports.deserialize,
    registerClass: exports.registerClass,
    registerSymbol: exports.registerSymbol,
    registerCustom: exports.registerCustom,
    allowErrorProps: error_props_1.allowErrorProps
};
//# sourceMappingURL=index.js.map